//
//  APPDelBLL.swift
//  OralStunts
//
//  Created by Noah_Shan on 2018/5/18.
//  Copyright ¬© 2018Âπ¥ Inspur. All rights reserved.
//

import Foundation

class APPDelBLL: NSObject {

    var page: Int = 1

    override init() {
        super.init()
    }

    func createTab() {
        MineDAL().createTabWithModel()
        OTNoteDAL().createTab()
        FolderDAL().createTab()
        insertPreNote()
    }

    /// È¢ÑÂà∂‰∏ÄÊù°Êï∞ÊçÆÔºåÂÜôÂÖ•Ëøá‰∏ÄÊ¨°‰∏ç‰ºöÂÜçÊ¨°ÂÜôÂÖ•
    func insertPreNote() {
        if IICacheManager.getInstance().isContains(key: IICacheStorage().preNoteInsert) {
            return
        }
        IICacheManager.getInstance().saveObj(key: IICacheStorage().preNoteInsert, someThing: NSString(string: "fdsa"))
        let note = OTNoteModel()
        note.id = NSUUID().uuidString
        note.setTitle("üëèüèªüëèüèªüëèüèªÂºÄÂßã‰ΩøÁî®OralStunts", [])
        note.setContexts(createTime: Date(), content: "üëèüèªüëèüèªüëèüèªÂºÄÂßã‰ΩøÁî®OralStunts,ËØ¶ÊÉÖËØ∑Êü•Áúã‰∏™‰∫∫‰∏≠ÂøÉÂæóÂ∏ÆÂä©", volumnList: [])
        note.videoUrl.append("")
        NoteLogicBLL().insertNoteInfo(with: note)

    }

    func thridLibInit(del: AppDelegate,options: [UIApplicationLaunchOptionsKey: Any]?) {
        initTheFlyMSC()
        initTheBUGLY()
        initEvernote()
        startNetworkObserver()
        startCPURecognition()
        OTShare.registerShare()
        injection3Init()
        JPushRegister(del: del, options: options)
    }

    /// ÊøÄÂÖâÊé®ÈÄÅÈõÜÊàê
    func JPushRegister(del: AppDelegate,options: [UIApplicationLaunchOptionsKey: Any]?) {
        JPUSHService.setLogOFF()
        let entity = JPUSHRegisterEntity()
        if #available(iOS 12.0, *) {
            entity.types = Int(JPAuthorizationOptions.alert.rawValue | JPAuthorizationOptions.badge.rawValue | JPAuthorizationOptions.sound.rawValue | JPAuthorizationOptions.providesAppNotificationSettings.rawValue)
        } else {
            entity.types = Int(JPAuthorizationOptions.alert.rawValue | JPAuthorizationOptions.badge.rawValue | JPAuthorizationOptions.sound.rawValue)
        }
        JPUSHService.register(forRemoteNotificationConfig: entity, delegate: del)
        JPUSHService.setup(withOption: options, appKey: IIBizConfig.jpushKey, channel: "App Store", apsForProduction: true)
        UIApplication.shared.applicationIconBadgeNumber = 0
        if IICacheManager.getInstance().isContains(key: IICacheStorage().isloginApp) {
            JPUSHService.setAlias(MineBLL().getUserInfo().id.replace(find: "-", replaceStr: ""), completion: { (status, alis, flag) in
            }, seq: 9)
        }
    }

    func injection3Init() {
        #if DEBUG
//        Bundle(path: "/Applications/InjectionIII.app/Contents/Resources/iOSInjection10.bundle")?.load()
//        // for tvOS:
//        Bundle(path: "/Applications/InjectionIII.app/Contents/Resources/tvOSInjection10.bundle")?.load()
//        // Or for macOS:
//        Bundle(path: "/Applications/InjectionIII.app/Contents/Resources/macOSInjection10.bundle")?.load()
        #endif
    }

    func initTheFlyMSC() {
        IFlySetting.showLogcat(false)
        IFlySpeechUtility.createUtility("appid=\(IIBizConfig.iflyKey)")
    }

    func initTheBUGLY() {
        let config = BuglyConfig()
        config.reportLogLevel = .warn
        Bugly.start(withAppId: IIBizConfig.buglyKey, config: config)
    }

    /// Ê≥®ÂÜåÂç∞Ë±°Á¨îËÆ∞
    /// https://dev.yinxiang.com/doc/articles/authentication.php
    func initEvernote() {
        ENSession.setSharedSessionConsumerKey(IIBizConfig.evernoteKey, consumerSecret: IIBizConfig.evernoteSecret, optionalHost: ENSessionHostSandbox)
    }

    /// ÁΩëÁªúÁõëÂê¨ÊúçÂä°ÂêØÂä®
    func startNetworkObserver() {
        IIHTTPNetWork.startService()
    }

    /// Ëá™ÂÆö‰πâÊó•Â∏∏‰∏äÊä•-ÈªòËÆ§Áî®Êù•ÊÑèËßÅÂèçÈ¶à
    func reportCustomExp(info: [Any]) {
        var infos = info
        infos.append(MineBLL().getUserInfo().nickName)
        Bugly.reportException(withCategory: 3, name: "Áî®Êà∑ÊÑèËßÅÂèçÈ¶à‰∏äÊä•", reason: "ÊîπËøõAPP‰ΩìÈ™å", callStack: infos, extraInfo: [:], terminateApp: false)
    }

    /// ÂºÄÂêØGPU & CPU & MEMORY & FPS ÁõëÂê¨
    func startCPURecognition() {
        func start() -> Bool {
            WHDebugToolManager.sharedInstance().toggle(with: DebugToolType.all)
            return true
        }
        //assert(start(), "debugÊ®°Âºè‰∏ãÊâç‰ºöÂºÄÂêØ")
    }

    /// siri-useractivity-jumptovc
    func userActivityJumpToNoteCreateVC() {
        let con = NoteContextCreateViewController()
        NoteCreatingBLL.getInstance().progressModelTitle(title: NoteCreatingBLL.getInstance().creatingNoteModel.id, volumeList: [])
        con.hidesBottomBarWhenPushed = true
        con.presentedVcHasNavigation = false
        guard let saltedVc = (UIApplication.shared.keyWindow?.rootViewController as? SaltedFishTabBarVC) else { return }
        (saltedVc.selectedViewController as? UINavigationController)?.pushViewController(con, animated: true)
    }

}
